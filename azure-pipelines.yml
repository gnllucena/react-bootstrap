trigger:
- main

# variables:
# - group: Staging
# - group: Production

stages:
- stage: Approval
  jobs:
  - deployment: 'WaitBuildApproval'
    environment: 'Build'
    pool:
      vmImage: 'ubuntu-20.04'
    strategy:
      runOnce:
        deploy:
          steps:
            - script: echo Approved
              displayName: 'Waiting build approval'

- stage: Staging
  jobs:
  - deployment: 'DeployStaging'
    environment: 'Staging'
    pool:
      vmImage: 'ubuntu-20.04'
    variables:
      - group: Production
    strategy:
      runOnce:
        deploy:
          steps:
            - script: echo $(BUCKET_COMPANIES)
              displayName: 'Testing environment variable'

- stage: Build
  jobs:
  - job: 'BuildAndTest'
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - task: NodeTool@0
        displayName: 'Installing Node.js'
        inputs:
          versionSpec: '10.x'
      - script: yarn install
        displayName: 'Restoring dependencies'
      - script: yarn run test
        displayName: 'Running tests'
      - task: PublishTestResults@2
        displayName: 'Publishing test results'
        inputs:
          testRunner: JUnit
          testResultsFiles: 'coverage/junit.xml'
      - task: PublishCodeCoverageResults@1
        displayName: 'Publishing code coverage'
        inputs:
          codeCoverageTool: 'Cobertura'
          summaryFileLocation: 'coverage/cobertura-coverage.xml'
      # - task: BuildQualityChecks@8
      #   displayName: 'Checking build quality'
      #   inputs:
      #     allowCoverageVariance: true
      #     coverageVariance: 5
      #     coverageType: branch
      #     checkCoverage: true
      #     coverageThreshold: 1
      #     coverageUpperThreshold: 1
      #     coverageDeltaType: percentage
      - script: yarn run build
        displayName: 'Creating artifact'
        env:
          NODE_OPTIONS: --max_old_space_size=16384
      - publish: $(System.DefaultWorkingDirectory)/dist
        displayName: 'Publishing app artifact'
        artifact: app